#!/usr/bin/env node

const fs = require("node:fs");
const http = require("node:http");
const path = require("node:path");

const docs_directory = path.resolve(__dirname, "../target/doc");

const mime_type_dict = {
    "jpg": "image/jpeg",
    "jpeg": "image/jpeg",
    "png": "image/png",
    "gif": "image/gif",
    "svg": "image/svg+xml",
    "webp":"image/webp",
    "ico": "image/x-icon",

    // text mime types
    "css": "text/css",
    "html": "text/html",
    "txt": "text/plain",

    // application mime types
    "js": "application/javascript",
    "json": "application/json",

    // fonts
    "woff": "font/woff",
    "woff2": "font/woff2"
}

/**
 * 
 * @param {string} ext 
 * @returns 
 */
function getMimeType(ext) {
    if (ext.startsWith(".")) {
        ext = ext.substring(1);
    }

    return ext in mime_type_dict ? mime_type_dict[ext] : "application/octet-stream";
}

let server = http.createServer((req, res) => {
    let file_path = docs_directory + req.url;

    fs.readFile(file_path, (err, data) => {
        if (err) {
            let status_code;
            let sending;

            if (err.code === "ENOENT") {
                status_code = 404;
                sending = JSON.stringify({
                    message: "your requested file was not found"
                });
            } else {
                status_code = 500;
                sending = JSON.stringify(err);
            }

            res.writeHead(status_code, {
                "content-type": "application/json",
                "content-length": sending.length
            });
            res.end(sending);

            return;
        }

        let headers = {
            "content-type": getMimeType(path.extname(file_path)),
            "content-length": data.length
        };

        res.writeHead(200, headers);
        res.end(data);
    });
});

server.once("listening", () => {
    console.log("server listening", server.address());
});

server.listen(40125);